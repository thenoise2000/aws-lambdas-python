service: license-plate-processor
provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME}
  
functions:
  processLicensePlate:
    handler: handler.process_license_plate
    events:
      - http:
          path: process
          method: post
  getMetrics:
    handler: handler.get_metrics
    events:
      - http:
          path: metrics
          method: get
resources:
  Resources:
    LicensePlateTable:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceIdentifier: license-plate-db
        AllocatedStorage: '20'
        DBInstanceClass: db.t2.micro
        Engine: postgres
        MasterUsername: ${env:DB_USER}
        MasterUserPassword: ${env:DB_PASSWORD}
        DBName: ${env:DB_NAME}
        VPCSecurityGroups:
          - !GetAtt MyDBSecurityGroup.GroupId
    MyDBSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Enable access to RDS
        VpcId: <VPC_ID>
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '5432'
            ToPort: '5432'
            CidrIp: 0.0.0.0/0

package:
  include:
    - handler.py
    - db.py
    - requirements.txt
    - README.md
    - serverless.yml
  exclude:
    - venv/**
    - tests/**
    - node_modules/**
    - __pycache__/**
    - .env
    - package.json
    - package-lock.json    
